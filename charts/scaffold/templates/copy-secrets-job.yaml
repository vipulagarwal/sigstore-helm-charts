{{- if .Values.copySecretJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
{{ include "tuf.namespace" .Subcharts.tuf | indent 2 }}
  name: {{ .Values.copySecretJob.name }}
spec:
  backoffLimit: {{ .Values.copySecretJob.backoffLimit }}
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.copySecretJob.serviceaccount }}
      initContainers:
      - name: wait-for-rekor-deployment-readiness
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "kubectl rollout status deployment {{ .Values.rekor.server.fullnameOverride }} --timeout=120s -n {{ .Values.rekor.namespace.name }}"
        ]
      {{- if .Values.copySecretJob.initContainerResources }}
        resources:
{{ toYaml .Values.copySecretJob.initContainerResources | indent 10 }}
      {{- end }}
      - name: wait-for-fulcio-deployment-readiness
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "kubectl rollout status deployment {{ .Values.fulcio.server.fullnameOverride }} --timeout=120s -n {{ .Values.fulcio.namespace.name }}"
        ]
      {{- if .Values.copySecretJob.initContainerResources }}
        resources:
{{ toYaml .Values.copySecretJob.initContainerResources | indent 10 }}
      {{- end }}
      - name: wait-for-ctlog-deployment-readiness
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "kubectl rollout status deployment {{ .Values.ctlog.fullnameOverride }} --timeout=120s -n {{ .Values.ctlog.namespace.name }}"
        ]
      {{- if .Values.copySecretJob.initContainerResources }}
        resources:
{{ toYaml .Values.copySecretJob.initContainerResources | indent 10 }}
      {{- end }}

      containers:
      - name: copy-rekor-secret
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "curl {{ .Values.rekor.server.fullnameOverride}}.{{ .Values.rekor.namespace.name }}.svc.cluster.local/api/v1/log/publicKey -o /tmp/key -v && kubectl create secret generic {{ .Values.tuf.secrets.rekor.name }} --from-file=key=/tmp/key"
        ]
      {{- if .Values.copySecretJob.resources }}
        resources:
{{ toYaml .Values.copySecretJob.resources | indent 10 }}
      {{- end }}
      - name: copy-fulcio-secret
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "kubectl -n {{ .Values.fulcio.namespace.name }} get secrets {{ .Values.tuf.secrets.fulcio.name }} -oyaml | sed 's/namespace: .*/namespace: {{ include "tuf.rawnamespace" .Subcharts.tuf }}/' | kubectl apply -f -"
        ]
      {{- if .Values.copySecretJob.resources }}
        resources:
{{ toYaml .Values.copySecretJob.resources | indent 10 }}
      {{- end }}
      - name: copy-ctlog-secret
        image: {{ template "scaffold.image" .Values.copySecretJob }}
        imagePullPolicy: {{ .Values.copySecretJob.pullPolicy }}
        command: ["/bin/sh"]
        args: [
            "-c",
            "kubectl -n {{ .Values.ctlog.namespace.name }} get secrets {{ .Values.tuf.secrets.ctlog.name }} -oyaml | sed 's/namespace: .*/namespace: {{ include "tuf.rawnamespace" .Subcharts.tuf }}/' | kubectl apply -f -"
        ]
      {{- if .Values.copySecretJob.resources }}
        resources:
{{ toYaml .Values.copySecretJob.resources | indent 10 }}
      {{- end }}
{{- end }}